<html lang="en">

<head>

    <link href="/bootstrap-5.1.3-dist/css/bootstrap.min.css" rel="stylesheet" media="all">
    <!--<link href="/bootstrap-select-1.13.14/dist/css/bootstrap-select.min.css" rel="stylesheet" media="all">-->
    <link href="/css/fh_design.css" rel="stylesheet" media="all">


   <link href="/css/landing-page.css" rel="stylesheet">
   <link href="/css/main.css" rel="stylesheet">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="kaps avatar test side">
    <meta name="author" content="Marcel Ochsendorf">
    <meta http-equiv="cache-control" content="max-age=0"/>
    <meta http-equiv="cache-control" content="no-cache"/>
    <meta http-equiv="expires" content="0"/>
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT"/>
    <meta http-equiv="pragma" content="no-cache"/>
    <title><%= app_name %></title>


    <style>


        #content .info {
            height: 20px;
        }

        #content .map path {
            fill: #aaa;
            stroke: #fff;
        }

        #content .bounding-box rect {
            fill: none;
            stroke: #333;
            stroke-dasharray: 2, 1;
        }

        #content .centroid {
            display: none;
        }

        #content .centroid circle {
            fill: red;
        }

        circle {
            fill: #fff;
            fill-opacity: 0.4;
            stroke: #111;
        }

        path.active {
            fill: pink;
        }
        circle.active {
            fill: blue;
        }


    </style>
</head>

<body class="container">

<nav class="navbar navbar-dark bg-dark static-top">
    <div class="container">
        <span>
            <img src="/img/logo.png" height="60px"/>
            <a class="navbar-brand" href="/"><b class="fhcolor_text">Data Science II - Public Transport - Spreading Viewer</b></a>
        </span>
    </div>
</nav>



<div id="content d-flex">


    <!-- ADD SPACING -->
    <div class="row mt-5"></div>

    <div class="row justify-content-center align-self-center">
        <div class="col-4">
            <label for="from_station" class="form-label"><b class="fhcolor_text">START STATION</b></label>
            <select id="from_station" class="form-select form-select-lg mb-3" data-live-search="true">

            </select>


        </div>
        <div class="col-3">
            <img src="/img/from_train_to.png" height="100px">
        </div>
        <div class="col-5">

            <label for="to_station" class="form-label"><b class="fhcolor_text">DESTINATION STATION</b></label>
            <select id="to_station" class="form-select form-select-lg mb-3" data-live-search="true">

            </select>


        </div>
    </div>


    <div class="row">
        <div class="col">
            <div id="info" style="color: whitesmoke;">Hover over a country</div>
        </div>
    </div>

    <div class="row fhcolor_bg" id="map_content" height="600px">
        <div class="col">
            <svg id="svg_map"  height="600px">
                <g id="svg_map_map" class="map"></g>
                <g class="bounding-box">
                    <rect></rect>
                </g>
                <g class="centroid">
                    <circle r="4"></circle>
                </g>
            </svg>
        </div>

    </div>


</div>


<script src="/js/jquery-3.4.1.min.js"></script>

<script src="/js/popper.min.js"></script>
<script src="/bootstrap-5.1.3-dist/js/bootstrap.bundle.min.js"></script>
<!--<script src="/bootstrap-select-1.13.14/dist/js/bootstrap-select.min.js"></script>-->



<script src="/js/2.0.4_socket.io.js"></script>
<script src="/js/d3.min.js"></script>

<script src="/js/d3-array/dist/d3-array.min.js"></script>
<script src="/js/d3-geo/dist/d3-geo.min.js"></script>


<script>


    var width = 300;
    var height = 600;
    var scale = 0.1;

    var projection = null;
    var geoGenerator = null;
    var path = null;

    function init_d3() {
        width = $("#map_content").width();
        height = $("#map_content").height();

        $("#svg_map").width(width);
        $("#svg_map").height(height);

        projection = d3.geoMercator();
        geoGenerator = d3.geoPath().projection(projection);
    }


    function handleMouseover(e, d) {
        let pixelArea = geoGenerator.area(d);
        let bounds = geoGenerator.bounds(d);
        let centroid = geoGenerator.centroid(d);
        let measure = geoGenerator.measure(d);

        $("#info").html(d.properties.name + ' (path.area = ' + pixelArea.toFixed(1) + ' path.measure = ' + measure.toFixed(1) + ')');

        d3.select('#content .bounding-box rect')
            .attr('x', bounds[0][0])
            .attr('y', bounds[0][1])
            .attr('width', bounds[1][0] - bounds[0][0])
            .attr('height', bounds[1][1] - bounds[0][1]);

        d3.select('#svg_map .centroid')
            .style('display', 'inline')
            .attr('transform', 'translate(' + centroid + ')');
    }


    function updatestation(geojson){
        let u = d3.select('#svg_map g.map')
            .selectAll('path')
            .data(geojson.features).enter().append("circle")
            .attr('r',5)
            .attr('cx',function(d) { return projection(d.geometry.coordinates)[0]})
            .attr('cy',function(d) { return projection(d.geometry.coordinates)[1]})
            .on("mouseover",function(d) {
                console.log("just had a mouseover", d3.select(d));
                d3.select(this).classed("active",true);

            }).on("mouseout",function(d){
                d3.select(this).classed("active",false);
            });

    }
    function update(geojson) {
        let u = d3.select('#svg_map g.map')
            .selectAll('path')
            .data(geojson.features);



        u.enter()
            .append('path')
            .attr('d', geoGenerator)
            .on('mouseover', handleMouseover);




    }


    $(document).ready(function () {
        console.log("ready!");

        socket = io();
        socket.emit('msg', {});

        socket.on('update', function (data) {
            var objectConstructor = {}.constructor;
            console.log(data)
        });


        // LOAD SELECTED STATION INTO FIELDS
        $.getJSON( "/visualisation_files/selected_stations.json", function( json ) {
           if(!json || !json.stations){
               alert("failed to load selected_stations");
               return;
           }
            //LOAD VALUES INTO SELECT ITEM
           for(var i= 0; i < json.stations.length;i++){
               $("#from_station").append(new Option(json.stations[i].name, json.stations[i].id));
               $("#to_station").append(new Option(json.stations[i].name, json.stations[i].id));
           }
        });


        //INIT D3
        init_d3();

        // REQUEST DATA
        d3.json('http://enjalot.github.io/wwsd/data/world/world-110m.geojson').then(function (json) {update(json)});
        d3.json('http://enjalot.github.io/wwsd/data/world/ne_50m_populated_places_simple.geojson').then(function (json) {updatestation(json)});


    });
</script>

</body>

</html>