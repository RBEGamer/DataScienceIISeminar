<html lang="en">

<head>

    <link href="/css/bootstrap.css" rel="stylesheet">


    <link href="/css/landing-page.css" rel="stylesheet">
    <link href="/css/main.css" rel="stylesheet">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <meta name="description" content="kaps avatar test side">
    <meta name="author" content="Marcel Ochsendorf">
    <meta http-equiv="cache-control" content="max-age=0"/>
    <meta http-equiv="cache-control" content="no-cache"/>
    <meta http-equiv="expires" content="0"/>
    <meta http-equiv="expires" content="Tue, 01 Jan 1980 1:00:00 GMT"/>
    <meta http-equiv="pragma" content="no-cache"/>
    <title><%= app_name %></title>


    <style>
        #content .info {
            height: 20px;
        }

        #content .map path {
            fill: #aaa;
            stroke: #fff;
        }

        #content .bounding-box rect {
            fill: none;
            stroke: #333;
            stroke-dasharray: 2,1;
        }

        #content .centroid {
            display: none;
        }

        #content .centroid circle {
            fill: red;
        }
    </style>
</head>

<body class="container">

<nav class="navbar navbar-light bg-light static-top">
    <div class="container">
        <a class="navbar-brand" href="/">Data Science II - Covid - Public Transport - Viewer</a>

    </div>
</nav>




                <div id="content">
                    <div class="info">Hover over a country</div>
                    <svg width="620px" height="600px">
                        <g class="map"></g>
                        <g class="bounding-box"><rect></rect></g>
                        <g class="centroid"><circle r="4"></circle></g>
                    </svg>
                </div>



<script src="/js/jquery-3.4.1.min.js"></script>
<script src="/js/bootstrap.min.js"></script>
<script src="/js/2.0.4_socket.io.js"></script>
<script src="/js/d3.min.js"></script>

<script>

    let projection = d3.geoMercator()
        //.scale(0.1)
        //.translate([200, 280])
        //.center([0, 5]);

    let geoGenerator = d3.geoPath()
        .projection(projection);

    function handleMouseover(e, d) {
        let pixelArea = geoGenerator.area(d);
        let bounds = geoGenerator.bounds(d);
        let centroid = geoGenerator.centroid(d);
        let measure = geoGenerator.measure(d);

        d3.select('#content .info').text(d.properties.name + ' (path.area = ' + pixelArea.toFixed(1) + ' path.measure = ' + measure.toFixed(1) + ')');

        d3.select('#content .bounding-box rect')
            .attr('x', bounds[0][0])
            .attr('y', bounds[0][1])
            .attr('width', bounds[1][0] - bounds[0][0])
            .attr('height', bounds[1][1] - bounds[0][1]);

        d3.select('#content .centroid')
            .style('display', 'inline')
            .attr('transform', 'translate(' + centroid + ')');
    }

    function update(geojson) {
        let u = d3.select('#content g.map')
            .selectAll('path')
            .data(geojson.features);

        u.enter()
            .append('path')
            .attr('d', geoGenerator)
            .on('mouseover', handleMouseover);
    }







    $(document).ready(function () {
        console.log("ready!");

        socket = io();
        socket.emit('msg', {});

        socket.on('update', function (data) {
            var objectConstructor = {}.constructor;
            console.log(data)
        });

        // REQUEST DATA
        d3.json('/test.json').then(function(json) {
            update(json)
        });


    });
</script>

</body>

</html>